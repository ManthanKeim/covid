{"version":3,"sources":["query.js","Summary/index.js","Map/constants.js","HeatMaps/India/index.js","Map/common-functions.js","Map/legend.js","Map/choropleth.js","Map/index.js","App.js","serviceWorker.js","api/index.js","Header.js","Footer.js","Stats/index.js","Detail/index.js","HeatMaps/InidaState/index.js","References/index.js","index.js"],"names":["query","summary","india","gql","world","stats","getQuery","type","id","columnOptions","size","sizeXL","sizeL","sizeM","sizeS","Summary","props","entity","showLink","history","useHistory","extractStats","result","country","mostRecent","state","useQuery","loading","error","data","shadow","style","minHeight","padding","toUpperCase","className","appearance","Fragment","name","value","confirmed","deaths","recovered","COLORS","RADIAN","Math","PI","width","height","onMouseEnter","dataKey","cx","cy","labelLine","label","midAngle","innerRadius","outerRadius","percent","radius","index","x","cos","y","sin","fill","textAnchor","dominantBaseline","toFixed","map","entry","length","key","getChart","fontSize","onClick","push","handleMore","icon","iconAlign","MAP_TYPES","React","useEffect","useState","require","MAPS_DIR","MAP_META","India","geoDataFile","mapType","graphObjectName","Assam","Bihar","Chandigarh","Chhattisgarh","Delhi","Karnataka","Kerala","Goa","Gujarat","Haryana","Jharkhand","Ladakh","Lakshadweep","Maharashtra","Manipur","Meghalaya","Mizoram","Nagaland","Odisha","Puducherry","Punjab","Rajasthan","Sikkim","Telangana","Tripura","Uttarakhand","STATE_CODES","AP","AR","AS","BR","CT","GA","GJ","HR","HP","JH","KA","KL","MP","MH","MN","ML","MZ","NL","OR","PB","RJ","SK","TN","TG","TR","UT","UP","WB","AN","CH","DN","DD","DL","JK","LA","LD","PY","reverseStateCodes","Object","keys","stateCodes","code","months","formatDate","unformattedDate","day","slice","month","year","time","formatDateAbsolute","formatNumber","shrinkNumbers","numberFormatter","Intl","NumberFormat","isNaN","d3format","format","ramp","color","n","canvas","document","createElement","context","getContext","i","fillStyle","fillRect","legend","title","tickSize","marginTop","marginRight","marginBottom","marginLeft","ticks","tickFormat","tickValues","svg","d3","attr","tickAdjust","g","selectAll","nodes","remove","interpolate","min","domain","range","copy","rangeRound","append","toDataURL","interpolator","assign","undefined","round","invertExtent","thresholds","quantiles","thresholdFormat","d","join","max","bandwidth","call","select","text","node","propertyFieldMap","ChoroplethMap","statistic","mapData","setHoveredRegion","mapMeta","changeMap","selectedRegion","setSelectedRegion","isCountryLoaded","choroplethMap","useRef","choroplethLegend","svgRenderCount","setSvgRenderCount","ready","useCallback","geoData","path","propertyField","current","topology","topojson","objects","projection","widthStyle","parseInt","fitWidth","heightStyle","fitSize","bBox","bounds","split","domainMax","maxConfirmed","steps","domainMin","floor","Array","from","e","svgLegend","colorScale","widthLegend","margin","left","right","barWidth","heightLegend","onceTouchedRegion","features","properties","on","handleMouseover","stopPropagation","Number","parseFloat","total","toString","toTitleCase","err","console","log","str","toLowerCase","charAt","a","prevCount","classed","parentNode","appendChild","animationDelay","preserveAspectRatio","ref","getRegionFromState","region","MapExplorer","forwardRef","states","stateDistrictWiseData","stateTestData","regionHighlighted","onMapHighlightChange","panelRegion","setPanelRegion","currentHoveredRegion","setCurrentHoveredRegion","testObj","setTestObj","currentMap","setCurrentMap","useMemo","currentMapData","reduce","acc","districtWiseData","districtData","district","find","active","getRegionFromDistrict","newMap","switchMapToState","topDistrict","filter","sort","b","lastupdatedtime","obj","totaltested","window","innerWidth","parse","updatedon","Date","formatDistance","fontWeight","Unknown","App","setStates","setStateDistrictWiseData","setStateTestData","fetched","setFetched","setLastUpdated","setActiveStateCode","getStates","Promise","all","axios","get","stateDistrictWiseResponse","statewise","testData","states_tested_data","reverse","totalTest","tested","updatetimestamp","totalindividualstested","source","statecode","refs","display","justifyContent","Boolean","location","hostname","match","client","ApolloClient","uri","Header","Footer","getFullYear","weight","Stats","searchQuery","setSearchQuery","handleSearch","schema","pinned","template","rowIndex","header","getData","list","countries","item","indexOf","heading","clearButton","placeholder","onChange","ev","target","onClear","info","maxHeight","loadMore","loadingMoreData","getGridActions","buffer","dynamicRowHeight","rowHeight","headerHeight","virtualization","stroke","barSize","Detail","params","useParams","stateName","stateData","setStateData","isLoading","setLoading","then","res","entries","catch","link","References","ReactDOM","render","StrictMode","basename","exact","getElementById","navigator","serviceWorker","registration","unregister","message"],"mappings":"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","file":"static/js/main.7bd9fd0f.chunk.js","sourcesContent":["import { gql } from 'apollo-boost';\n\nconst query = {\n  summary: {\n    india: gql`\n      {country(name: \\\"India\\\") { name, mostRecent { confirmed, deaths, recovered}}}\n    `,\n    world: gql`\n      { summary{\n        confirmed,\n        deaths,\n        recovered } }\n    `\n  },\n  stats: {\n    world: gql`\n      {countries(names: []){ name, mostRecent { confirmed, deaths, recovered}}}    \n    `,\n    india: gql`\n      {states(country: \"India\", names: []){ name, mostRecent { confirmed, deaths, recovered}}}\n    `\n  }\n}\n\nexport const getQuery = (type, id) => {\n  if (type === 'country' && id !== 'india') {\n    return gql`\n    {\n      country(name: \"${id}\") {\n        name\n        mostRecent{\n          confirmed\n          recovered\n          deaths\n        }\n      }\n    }\n  `\n  } else if (type === 'state') {\n    return gql`\n      {\n        states(country: \"India\", names: []) {\n          name\n        }\n      \n        state(country: \"India\", name: \"${id}\") {\n          name\n          mostRecent {\n            confirmed\n            deaths\n            recovered\n          }\n        }\n      }\n    `\n  } else if (type === 'world') {\n    return gql`\n      { summary{\n        confirmed,\n        deaths,\n        recovered } }\n    `\n  } else if (type === 'country' && id === 'india') {\n    return gql`\n      {country(name: \\\"India\\\") { name, mostRecent { confirmed, deaths, recovered}}}\n    `\n  }\n}\n\nexport default query;","import React from 'react';\nimport { Card, Spinner, Text, Heading, Row, Column, Button } from 'design-system';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useHistory } from \"react-router-dom\";\nimport {\n  PieChart, Pie, Sector, Cell, Tooltip\n} from 'recharts';\nimport './Summary.css';\nimport { getQuery } from '../query';\n\nconst columnOptions = {\n  size: \"12\",\n  sizeXL: \"6\",\n  sizeL: \"12\",\n  sizeM: \"6\",\n  sizeS: \"6\"\n};\n\nconst Summary = (props) => {\n  const { entity, type, showLink } = props;\n  let history = useHistory();\n\n  const extractStats = (entity, result) => {\n    const stats = type === 'country' ? result.country.mostRecent : type === 'state' ? result.state.mostRecent : result.summary;\n    return stats;\n  }\n\n  const getChart = stats => {\n    const data = [\n      {\n        name: 'Active', value: stats.confirmed - stats.deaths - stats.recovered\n      },\n      {\n        name: 'Deaths', value: stats.deaths\n      },\n      {\n        name: 'Recovered', value: stats.recovered\n      }\n    ]\n    const COLORS = ['#0070dd', '#d93737', '#2ea843'];\n    const RADIAN = Math.PI / 180; \n    const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n      const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n     const x  = cx + radius * Math.cos(-midAngle * RADIAN);\n     const y = cy  + radius * Math.sin(-midAngle * RADIAN);\n    \n     return (\n       <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} \tdominantBaseline=\"central\">\n         {`${(percent * 100).toFixed(0)}%`}\n       </text>\n     );\n   };\n   return (\n    <PieChart width={200} height={200} onMouseEnter={() => null}>\n        <Pie\n          data={data}\n          dataKey=\"value\"\n          cx={100} \n          cy={100} \n          labelLine={false}\n          label={renderCustomizedLabel}\n          outerRadius={80} \n          fill=\"#8884d8\"\n        >\n          {\n            data.map((entry, index) => <Cell fill={COLORS[index % COLORS.length]} key={index} />)\n          }\n        </Pie>\n        <Tooltip />\n      </PieChart>\n   )\n  }\n\n  const getLegends = stats => {\n    return (\n      <ul className=\"Summary-list\">\n        <li className=\"Summary-list-item\" key=\"0\">\n          <div className=\"Legend Legend--primary\"></div>\n          <Text>Active - {stats.confirmed - stats.deaths - stats.recovered}</Text>\n        </li>\n        <li key=\"1\" className=\"Summary-list-item\">\n          <div className=\"Legend Legend--success\"></div>\n          <Text>Recovered - {stats.recovered}</Text>\n        </li>\n        <li key=\"2\" className=\"Summary-list-item\">\n          <div className=\"Legend Legend--alert\"></div>\n          <Text>Deaths - {stats.deaths}</Text>\n        </li>\n      </ul>\n    )\n  }\n\n  const handleMore = entity => {\n    if(entity === 'india') {\n      history.push('/india');\n    } else {\n      history.push('/world');\n    }\n  }\n\n\n  const { loading, error, data } = useQuery(getQuery(type, entity));\n  return (\n    <Card\n      shadow=\"medium\"\n      style={{\n        minHeight: '200px',\n        padding: '16px'\n      }}\n    >\n      <Text>{entity.toUpperCase()} STATISTICS</Text>\n        {loading && (\n          <div className=\"Spinner-container\">\n            <Spinner size=\"large\" appearance=\"primary\" />\n          </div>\n        )}\n        {!loading && error && (\n          <p>Error :(</p>\n        )}\n        {!loading && !error && (\n          <React.Fragment>\n            <Row>\n              <Column {...columnOptions}>\n                {getChart(extractStats(entity, data))}\n              </Column>\n              <Column {...columnOptions}>\n                <Heading appearance=\"subtle\" size=\"m\">\n                  Total Patients\n                </Heading>\n                <Text appearance=\"destructive\" style={{fontSize: '40px'}}>\n                  {extractStats(entity, data).confirmed}\n                </Text>\n                {getLegends(extractStats(entity, data))}\n              </Column>\n            </Row>\n            {showLink && (\n              <div>\n                <Button appearance=\"primary\" onClick={() => handleMore(entity)}\n                  icon=\"trending_flat\"\n                  iconAlign=\"right\">\n                  Show More\n                </Button>\n              </div>\n            )}\n          </React.Fragment>\n        )}\n    </Card>\n    );\n}\n\nexport default Summary;\n","export const MAP_TYPES = {\n  COUNTRY: 'country',\n  STATE: 'state',\n};\n\nexport const MAPS_DIR = '/covid/maps';\n\nexport const MAP_META = {\n  India: {\n    name: 'India',\n    geoDataFile: `${MAPS_DIR}/india.json`,\n    mapType: MAP_TYPES.COUNTRY,\n    graphObjectName: 'india',\n  },\n  'Andaman and Nicobar Islands': {\n    name: 'Andaman and Nicobar Islands',\n    geoDataFile: `${MAPS_DIR}/andamannicobarislands.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'andamannicobarislands_district',\n  },\n  'Arunachal Pradesh': {\n    name: 'Arunachal Pradesh',\n    geoDataFile: `${MAPS_DIR}/arunachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'arunachalpradesh_district',\n  },\n  'Andhra Pradesh': {\n    name: 'Andhra Pradesh',\n    geoDataFile: `${MAPS_DIR}/andhrapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'andhrapradesh_district',\n  },\n\n  Assam: {\n    name: 'Assam',\n    geoDataFile: `${MAPS_DIR}/assam.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'assam_district',\n  },\n  Bihar: {\n    name: 'Bihar',\n    geoDataFile: `${MAPS_DIR}/bihar.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'bihar_district',\n  },\n  Chandigarh: {\n    name: 'Chandigarh',\n    geoDataFile: `${MAPS_DIR}/chandigarh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'chandigarh_district',\n  },\n  Chhattisgarh: {\n    name: 'Chhattisgarh',\n    geoDataFile: `${MAPS_DIR}/chhattisgarh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'chhattisgarh_district',\n  },\n  'Dadra and Nagar Haveli': {\n    name: 'Dadra and Nagar Haveli',\n    geoDataFile: `${MAPS_DIR}/dadranagarhaveli.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'dadranagarhaveli_district',\n  },\n  Delhi: {\n    name: 'Delhi',\n    geoDataFile: `${MAPS_DIR}/delhi.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'delhi_district',\n  },\n  Karnataka: {\n    name: 'Karnataka',\n    geoDataFile: `${MAPS_DIR}/karnataka.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'karnataka_district',\n  },\n  Kerala: {\n    name: 'Kerala',\n    geoDataFile: `${MAPS_DIR}/kerala.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'kerala_district',\n  },\n  Goa: {\n    name: 'Goa',\n    geoDataFile: `${MAPS_DIR}/goa.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'goa_district',\n  },\n  Gujarat: {\n    name: 'Gujarat',\n    geoDataFile: `${MAPS_DIR}/gujarat.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'gujarat_district',\n  },\n  Haryana: {\n    name: 'Haryana',\n    geoDataFile: `${MAPS_DIR}/haryana.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'haryana_district',\n  },\n  'Himachal Pradesh': {\n    name: 'Himachal Pradesh',\n    geoDataFile: `${MAPS_DIR}/himachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'himachalpradesh_district',\n  },\n  'Jammu and Kashmir': {\n    name: 'Jammu and Kashmir',\n    geoDataFile: `${MAPS_DIR}/jammukashmir.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'jammukashmir_district',\n  },\n  Jharkhand: {\n    name: 'Jharkhand',\n    geoDataFile: `${MAPS_DIR}/jharkhand.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'jharkhand_district',\n  },\n  Ladakh: {\n    name: 'Ladakh',\n    geoDataFile: `${MAPS_DIR}/ladakh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'ladakh_district',\n  },\n  Lakshadweep: {\n    name: 'Lakshadweep',\n    geoDataFile: `${MAPS_DIR}/lakshadweep.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'lakshadweep_district',\n  },\n  'Madhya Pradesh': {\n    name: 'Madhya Pradesh',\n    geoDataFile: `${MAPS_DIR}/madhyapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'madhyapradesh_district',\n  },\n  Maharashtra: {\n    name: 'Maharashtra',\n    geoDataFile: `${MAPS_DIR}/maharashtra.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'maharashtra_district',\n  },\n  Manipur: {\n    name: 'Manipur',\n    geoDataFile: `${MAPS_DIR}/manipur.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'manipur_district',\n  },\n  Meghalaya: {\n    name: 'Meghalaya',\n    geoDataFile: `${MAPS_DIR}/meghalaya.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'meghalaya_district',\n  },\n  Mizoram: {\n    name: 'Mizoram',\n    geoDataFile: `${MAPS_DIR}/mizoram.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'mizoram_district',\n  },\n  Nagaland: {\n    name: 'Nagaland',\n    geoDataFile: `${MAPS_DIR}/nagaland.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'nagaland_district',\n  },\n  Odisha: {\n    name: 'Odisha',\n    geoDataFile: `${MAPS_DIR}/odisha.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'odisha_district',\n  },\n  Puducherry: {\n    name: 'Puducherry',\n    geoDataFile: `${MAPS_DIR}/puducherry.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'puducherry_district',\n  },\n  Punjab: {\n    name: 'Punjab',\n    geoDataFile: `${MAPS_DIR}/punjab.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'punjab_district',\n  },\n  Rajasthan: {\n    name: 'Rajasthan',\n    geoDataFile: `${MAPS_DIR}/rajasthan.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'rajasthan_district',\n  },\n  Sikkim: {\n    name: 'Sikkim',\n    geoDataFile: `${MAPS_DIR}/sikkim.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'sikkim_district',\n  },\n  'Tamil Nadu': {\n    name: 'Tamil Nadu',\n    geoDataFile: `${MAPS_DIR}/tamilnadu.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'tamilnadu_district',\n  },\n  Telangana: {\n    name: 'Telangana',\n    geoDataFile: `${MAPS_DIR}/telangana.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'telangana_district',\n  },\n  Tripura: {\n    name: 'Tripura',\n    geoDataFile: `${MAPS_DIR}/tripura.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'tripura_district',\n  },\n  Uttarakhand: {\n    name: 'Uttarakhand',\n    geoDataFile: `${MAPS_DIR}/uttarakhand.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'uttarakhand_district',\n  },\n  'Uttar Pradesh': {\n    name: 'Uttar Pradesh',\n    geoDataFile: `${MAPS_DIR}/uttarpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'uttarpradesh_district',\n  },\n\n  'West Bengal': {\n    name: 'West Bengal',\n    geoDataFile: `${MAPS_DIR}/westbengal.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'westbengal_district',\n  },\n};\n\nexport const STATE_CODES = {\n  AP: 'Andhra Pradesh',\n  AR: 'Arunachal Pradesh',\n  AS: 'Assam',\n  BR: 'Bihar',\n  CT: 'Chhattisgarh',\n  GA: 'Goa',\n  GJ: 'Gujarat',\n  HR: 'Haryana',\n  HP: 'Himachal Pradesh',\n  JH: 'Jharkhand',\n  KA: 'Karnataka',\n  KL: 'Kerala',\n  MP: 'Madhya Pradesh',\n  MH: 'Maharashtra',\n  MN: 'Manipur',\n  ML: 'Meghalaya',\n  MZ: 'Mizoram',\n  NL: 'Nagaland',\n  OR: 'Odisha',\n  PB: 'Punjab',\n  RJ: 'Rajasthan',\n  SK: 'Sikkim',\n  TN: 'Tamil Nadu',\n  TG: 'Telangana',\n  TR: 'Tripura',\n  UT: 'Uttarakhand',\n  UP: 'Uttar Pradesh',\n  WB: 'West Bengal',\n  AN: 'Andaman and Nicobar Islands',\n  CH: 'Chandigarh',\n  DN: 'Dadra and Nagar Haveli',\n  DD: 'Daman and Diu',\n  DL: 'Delhi',\n  JK: 'Jammu and Kashmir',\n  LA: 'Ladakh',\n  LD: 'Lakshadweep',\n  PY: 'Puducherry',\n};\n\nconst reverseStateCodes = {};\nObject.keys(STATE_CODES).map((key, index) => {\n  reverseStateCodes[STATE_CODES[key]] = key;\n  return null;\n});\nexport const STATE_CODES_REVERSE = reverseStateCodes;\n\nconst stateCodes = [];\nObject.keys(STATE_CODES).map((key, index) => {\n  stateCodes.push({code: key, name: STATE_CODES[key]});\n  return null;\n});\nexport const STATE_CODES_ARRAY = stateCodes;\n\nexport const DISTRICTS_ARRAY = [\n  {\n    district: 'Nicobars',\n    othernamesspellings: '',\n    state: 'Andaman and Nicobar Islands',\n  },\n  {\n    district: 'North and Middle Andaman',\n    othernamesspellings: '',\n    state: 'Andaman and Nicobar Islands',\n  },\n  {\n    district: 'South Andaman',\n    othernamesspellings: '',\n    state: 'Andaman and Nicobar Islands',\n  },\n  {\n    district: 'Anantapur',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'Chittoor',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'East Godavari',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'Guntur',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'Krishna',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'Kurnool',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'Prakasam',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'S.P.S. Nellore',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'Srikakulam',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'Visakhapatnam',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'Vizianagaram',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'West Godavari',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'Y.S.R.',\n    othernamesspellings: '',\n    state: 'Andhra Pradesh',\n  },\n  {\n    district: 'Anjaw',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Changlang',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'East Kameng',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'East Siang',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Kamle',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Kra Daadi',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Kurung Kumey',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Lepa Rada',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Lohit',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Longding',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Lower Dibang Valley',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Lower Siang',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Lower Subansiri',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Namsai',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Pakke Kessang',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Papum Pare',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Shi Yomi',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Siang',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Tawang',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Tirap',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Upper Dibang Valley',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Upper Siang',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Upper Subansiri',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'West Kameng',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'West Siang',\n    othernamesspellings: '',\n    state: 'Arunachal Pradesh',\n  },\n  {\n    district: 'Baksa',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Barpeta',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Biswanath',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Bongaigaon',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Cachar',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Charaideo',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Chirang',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Darrang',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Dhemaji',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Dhubri',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Dibrugarh',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Dima Hasao',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Goalpara',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Golaghat',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Hailakandi',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Hojai',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Jorhat',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Kamrup',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Kamrup Metropolitan',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Karbi Anglong',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Karimganj',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Kokrajhar',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Lakhimpur',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Majuli',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Morigaon',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Nagaon',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Nalbari',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Sivasagar',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Sonitpur',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'South Salmara Mancachar',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Tinsukia',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Udalguri',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'West Karbi Anglong',\n    othernamesspellings: '',\n    state: 'Assam',\n  },\n  {\n    district: 'Araria',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Arwal',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Aurangabad',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Banka',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Begusarai',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Bhagalpur',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Bhojpur',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Buxar',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Darbhanga',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Gaya',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Gopalganj',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Jamui',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Jehanabad',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Kaimur Bhabua',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Katihar',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Khagaria',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Kishanganj',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Lakhisarai',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Madhepura',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Madhubani',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Munger',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Muzaffarpur',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Nalanda',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Nawada',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'West Champaran',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Patna',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'East Champaran',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Purnia',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Rohtas',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Saharsa',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Samastipur',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Saran',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Sheikhpura',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Sheohar',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Sitamarhi',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Siwan',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Supaul',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Vaishali',\n    othernamesspellings: '',\n    state: 'Bihar',\n  },\n  {\n    district: 'Chandigarh',\n    othernamesspellings: '',\n    state: 'Chandigarh',\n  },\n  {\n    district: 'Balod',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Baloda Bazar',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Balrampur',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Bametara',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Bastar',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Bijapur',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Bilaspur',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Dakshin Bastar Dantewada',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Dhamtari',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Durg',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Gariaband',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Janjgir Champa',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Jashpur',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Kabeerdham',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Kondagaon',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Korba',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Koriya',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Mahasamund',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Mungeli',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Narayanpur',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Raigarh',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Raipur',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Rajnandgaon',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Sukma',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Surajpur',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Surguja',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Uttar Bastar Kanker',\n    othernamesspellings: '',\n    state: 'Chhattisgarh',\n  },\n  {\n    district: 'Dadra and Nagar Haveli',\n    othernamesspellings: '',\n    state: 'Dadra and Nagar Haveli',\n  },\n  {\n    district: 'Daman',\n    othernamesspellings: '',\n    state: 'Daman And Diu',\n  },\n  {\n    district: 'Diu',\n    othernamesspellings: '',\n    state: 'Daman And Diu',\n  },\n  {\n    district: 'Central Delhi',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'East Delhi',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'New Delhi',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'North Delhi',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'North East Delhi',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'North West Delhi',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'Shahdara',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'South Delhi',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'South East Delhi',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'South West Delhi',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'West Delhi',\n    othernamesspellings: '',\n    state: 'Delhi',\n  },\n  {\n    district: 'North Goa',\n    othernamesspellings: '',\n    state: 'Goa',\n  },\n  {\n    district: 'South Goa',\n    othernamesspellings: '',\n    state: 'Goa',\n  },\n  {\n    district: 'Ahmadabad',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Amreli',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Anand',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Aravalli',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Banas Kantha',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Bharuch',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Bhavnagar',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Botad',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Chota Udaipur',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Devbhumi Dwarka',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Dohad',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Gandhinagar',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Gir Somnath',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Jamnagar',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Junagadh',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Kachchh',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Kheda',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Mahesana',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Mahisagar',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Morbi',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Narmada',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Navsari',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Panch Mahals',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Patan',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Porbandar',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Rajkot',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Sabar Kantha',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Surat',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Surendranagar',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Tapi',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'The Dangs',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Vadodara',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Valsad',\n    othernamesspellings: '',\n    state: 'Gujarat',\n  },\n  {\n    district: 'Ambala',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Bhiwani',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Charki Dadri',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Faridabad',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Fatehabad',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Gurugram',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Hisar',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Jhajjar',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Jind',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Kaithal',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Karnal',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Kurukshetra',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Mahendragarh',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Nuh',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Palwal',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Panchkula',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Panipat',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Rewari',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Rohtak',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Sirsa',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Sonipat',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Yamunanagar',\n    othernamesspellings: '',\n    state: 'Haryana',\n  },\n  {\n    district: 'Bilaspur',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Chamba',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Hamirpur',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Kangra',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Kinnaur',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Kullu',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Lahul and Spiti',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Mandi',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Shimla',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Sirmaur',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Solan',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Una',\n    othernamesspellings: '',\n    state: 'Himachal Pradesh',\n  },\n  {\n    district: 'Anantnag',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Badgam',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Bandipore',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Baramula',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Doda',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Ganderbal',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Jammu',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Kathua',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Kishtwar',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Kulgam',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Kupwara',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Mirpur',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Muzaffarabad',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Pulwama',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Punch',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Rajouri',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Ramban',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Reasi',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Samba',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Shupiyan',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Srinagar',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Udhampur',\n    othernamesspellings: '',\n    state: 'Jammu and Kashmir',\n  },\n  {\n    district: 'Bokaro',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Chatra',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Deoghar',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Dhanbad',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Dumka',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Garhwa',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Giridih',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Godda',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Gumla',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Hazaribagh',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Jamtara',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Khunti',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Kodarma',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Latehar',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Lohardaga',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Pakur',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Palamu',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Pashchimi Singhbhum',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Purbi Singhbhum',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Ramgarh',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Ranchi',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Sahibganj',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Saraikela-Kharsawan',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Simdega',\n    othernamesspellings: '',\n    state: 'Jharkhand',\n  },\n  {\n    district: 'Bagalkote',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Ballari',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Belagavi',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Bengaluru',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Bengaluru Rural',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Bidar',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Chamarajanagara',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Chikkaballapura',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Chikkamagaluru',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Chitradurga',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Dakshina Kannada',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Davanagere',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Dharwad',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Gadag',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Hassan',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Haveri',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Kalaburagi',\n    othernamesspellings: 'Gulbarga',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Kodagu',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Kolar',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Koppal',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Mandya',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Mysuru',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Raichur',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Ramanagara',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Shivamogga',\n    othernamesspellings: 'Shimoga',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Tumakuru',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Udupi',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Uttara Kannada',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Vijayapura',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Yadgir',\n    othernamesspellings: '',\n    state: 'Karnataka',\n  },\n  {\n    district: 'Alappuzha',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Ernakulam',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Idukki',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Kannur',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Kasaragod',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Kollam',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Kottayam',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Kozhikode',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Malappuram',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Palakkad',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Pathanamthitta',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Thiruvananthapuram',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Thrissur',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Wayanad',\n    othernamesspellings: '',\n    state: 'Kerala',\n  },\n  {\n    district: 'Kargil',\n    othernamesspellings: '',\n    state: 'Ladakh',\n  },\n  {\n    district: 'Leh',\n    othernamesspellings: '',\n    state: 'Ladakh',\n  },\n  {\n    district: 'Lakshadweep',\n    othernamesspellings: '',\n    state: 'Lakshadweep',\n  },\n  {\n    district: 'Agar Malwa',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Alirajpur',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Anuppur',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Ashoknagar',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Balaghat',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Barwani',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Betul',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Bhind',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Bhopal',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Burhanpur',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Chhatarpur',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Chhindwara',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Damoh',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Datia',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Dewas',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Dhar',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Dindori',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Khandwa',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Guna',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Gwalior',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Harda',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Hoshangabad',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Indore',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Jabalpur',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Jhabua',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Katni',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Mandla',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Mandsaur',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Morena',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Narsimhapur',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Neemuch',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Niwari',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Panna',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Raisen',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Rajgarh',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Ratlam',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Rewa',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Sagar',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Satna',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Sehore',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Seoni',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Shahdol',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Shajapur',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Sheopur',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Shivpuri',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Sidhi',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Singrauli',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Tikamgarh',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Ujjain',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Umaria',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Vidisha',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Khargone',\n    othernamesspellings: '',\n    state: 'Madhya Pradesh',\n  },\n  {\n    district: 'Ahmadnagar',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Akola',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Amravati',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Aurangabad',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Bhandara',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Bid',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Buldana',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Chandrapur',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Dhule',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Gadchiroli',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Gondiya',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Hingoli',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Jalgaon',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Jalna',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Kolhapur',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Latur',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Mumbai',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Mumbai Suburban',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Nagpur',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Nanded',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Nandurbar',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Nashik',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Osmanabad',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Palghar',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Parbhani',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Pune',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Raigarh',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Ratnagiri',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Sangli',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Satara',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Sindhudurg',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Solapur',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Thane',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Wardha',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Washim',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Yavatmal',\n    othernamesspellings: '',\n    state: 'Maharashtra',\n  },\n  {\n    district: 'Bishnupur',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Chandel',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Churachandpur',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Imphal East',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Imphal West',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Jiribam',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Kakching',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Kamjong',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Kangpokpi',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Noney',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Pherzawl',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Senapati',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Tamenglong',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Tengnoupal',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Thoubal',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'Ukhrul',\n    othernamesspellings: '',\n    state: 'Manipur',\n  },\n  {\n    district: 'East Garo Hills',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'East Jaintia Hills',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'East Khasi Hills',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'North Garo Hills',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'Ribhoi',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'South Garo Hills',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'South West Garo Hills',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'South West Khasi Hills',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'West Garo Hills',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'West Jaintia Hills',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'West Khasi Hills',\n    othernamesspellings: '',\n    state: 'Meghalaya',\n  },\n  {\n    district: 'Aizawl',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: 'Champhai',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: 'Kolasib',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: 'Lawngtlai',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: 'Lunglei',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: 'Mamit',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: 'Saiha',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: 'Serchhip',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: 'Dimapur',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Kiphire',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Kohima',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Longleng',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Mokokchung',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Mon',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Peren',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Phek',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Tuensang',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Wokha',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Zunheboto',\n    othernamesspellings: '',\n    state: 'Nagaland',\n  },\n  {\n    district: 'Anugul',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Balangir',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Baleshwar',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Bargarh',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Baudh',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Bhadrak',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Cuttack',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Debagarh',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Dhenkanal',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Gajapati',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Ganjam',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Jagatsinghapur',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Jajapur',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Jharsuguda',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Kalahandi',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Kandhamal',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Kendrapara',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Kendujhar',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Khordha',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Koraput',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Malkangiri',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Mayurbhanj',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Nabarangapur',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Nayagarh',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Nuapada',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Puri',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Rayagada',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Sambalpur',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Subarnapur',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Sundargarh',\n    othernamesspellings: '',\n    state: 'Odisha',\n  },\n  {\n    district: 'Karaikal',\n    othernamesspellings: '',\n    state: 'Puducherry',\n  },\n  {\n    district: 'Mahe',\n    othernamesspellings: '',\n    state: 'Puducherry',\n  },\n  {\n    district: 'Puducherry',\n    othernamesspellings: '',\n    state: 'Puducherry',\n  },\n  {\n    district: 'Yanam',\n    othernamesspellings: '',\n    state: 'Puducherry',\n  },\n  {\n    district: 'Amritsar',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Barnala',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Bathinda',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Faridkot',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Fatehgarh Sahib',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Fazilka',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Firozpur',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Gurdaspur',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Hoshiarpur',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Jalandhar',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Kapurthala',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Ludhiana',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Mansa',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Moga',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Pathankot',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Patiala',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Rupnagar',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'S.A.S. Nagar',\n    othernamesspellings: 'Mohali',\n    state: 'Punjab',\n  },\n  {\n    district: 'Sangrur',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Shahid Bhagat Singh Nagar',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Sri Muktsar Sahib',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Tarn Taran',\n    othernamesspellings: '',\n    state: 'Punjab',\n  },\n  {\n    district: 'Ajmer',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Alwar',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Banswara',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Baran',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Barmer',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Bharatpur',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Bhilwara',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Bikaner',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Bundi',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Chittaurgarh',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Churu',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Dausa',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Dhaulpur',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Dungarpur',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Ganganagar',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Hanumangarh',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Jaipur',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Jaisalmer',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Jalore',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Jhalawar',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Jhunjhunu',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Jodhpur',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Karauli',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Kota',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Nagaur',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Pali',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Pratapgarh',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Rajsamand',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Sawai Madhopur',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Sikar',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Sirohi',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Tonk',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'Udaipur',\n    othernamesspellings: '',\n    state: 'Rajasthan',\n  },\n  {\n    district: 'East District',\n    othernamesspellings: '',\n    state: 'Sikkim',\n  },\n  {\n    district: 'North District',\n    othernamesspellings: '',\n    state: 'Sikkim',\n  },\n  {\n    district: 'South District',\n    othernamesspellings: '',\n    state: 'Sikkim',\n  },\n  {\n    district: 'West District',\n    othernamesspellings: '',\n    state: 'Sikkim',\n  },\n  {\n    district: 'Ariyalur',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Chennai',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Coimbatore',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Cuddalore',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Dharmapuri',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Dindigul',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Erode',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Kancheepuram',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Kanniyakumari',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Karur',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Krishnagiri',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Madurai',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Nagapattinam',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Namakkal',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Perambalur',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Pudukkottai',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Ramanathapuram',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Salem',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Sivaganga',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Thanjavur',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'The Nilgiris',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Theni',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Thiruvallur',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Thiruvarur',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Thoothukkudi',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Tiruchirappalli',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Tirunelveli',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Tiruppur',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Tiruvannamalai',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Vellore',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Viluppuram',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Virudhunagar',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Adilabad',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Bhadradri Kothagudem',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Hyderabad',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Jagitial',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Jangoan',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Jayashankar',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Jogulamba Gadwal',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Kamareddy',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Karimnagar',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Khammam',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Kumuram Bheem Asifabad',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Mahabubabad',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Mahabubnagar',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Mancherial',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Medak',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Medchal Malkajgiri',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Mulugu',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Nagarkurnool',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Nalgonda',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Narayanpet',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Nirmal',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Nizamabad',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Peddapalli',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Rajanna Sircilla',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Ranga Reddy',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Sangareddy',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Siddipet',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Suryapet',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Vikarabad',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Wanaparthy',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Warangal Rural',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Warangal Urban',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Yadadri Bhuvanagiri',\n    othernamesspellings: '',\n    state: 'Telangana',\n  },\n  {\n    district: 'Dhalai',\n    othernamesspellings: '',\n    state: 'Tripura',\n  },\n  {\n    district: 'Gomati',\n    othernamesspellings: '',\n    state: 'Tripura',\n  },\n  {\n    district: 'Khowai',\n    othernamesspellings: '',\n    state: 'Tripura',\n  },\n  {\n    district: 'North Tripura',\n    othernamesspellings: '',\n    state: 'Tripura',\n  },\n  {\n    district: 'Sipahijala',\n    othernamesspellings: '',\n    state: 'Tripura',\n  },\n  {\n    district: 'South Tripura',\n    othernamesspellings: '',\n    state: 'Tripura',\n  },\n  {\n    district: 'Unokoti',\n    othernamesspellings: '',\n    state: 'Tripura',\n  },\n  {\n    district: 'West Tripura',\n    othernamesspellings: '',\n    state: 'Tripura',\n  },\n  {\n    district: 'Agra',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Aligarh',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Ambedkar Nagar',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Amethi',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Amroha',\n    othernamesspellings: 'Jyotiba Phule Nagar',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Auraiya',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Azamgarh',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Baghpat',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Bahraich',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Ballia',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Balrampur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Banda',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Bara Banki',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Bareilly',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Basti',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Bhadohi',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Bijnor',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Budaun',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Bulandshahr',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Chandauli',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Chitrakoot',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Deoria',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Etah',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Etawah',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Faizabad',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Farrukhabad',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Fatehpur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Firozabad',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Gautam Buddha Nagar',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Ghaziabad',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Ghazipur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Gonda',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Gorakhpur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Hamirpur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Hapur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Hardoi',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Hathras',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Jalaun',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Jaunpur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Jhansi',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Kannauj',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Kanpur Dehat',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Kanpur Nagar',\n    othernamesspellings: 'Kanpur city',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Kasganj',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Kaushambi',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Kheri',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Kushinagar',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Lalitpur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Lucknow',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Mahoba',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Mahrajganj',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Mainpuri',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Mathura',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Mau',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Meerut',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Mirzapur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Moradabad',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Muzaffarnagar',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Pilibhit',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Pratapgarh',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Prayagraj',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Rae Bareli',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Rampur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Saharanpur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Sambhal',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Sant Kabir Nagar',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Shahjahanpur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Shamli',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Shrawasti',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Siddharthnagar',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Sitapur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Sonbhadra',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Sultanpur',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Unnao',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Varanasi',\n    othernamesspellings: '',\n    state: 'Uttar Pradesh',\n  },\n  {\n    district: 'Almora',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Bageshwar',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Chamoli',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Champawat',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Dehradun',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Haridwar',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Nainital',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Pauri Garhwal',\n    othernamesspellings: 'Pauri or just Garhwal',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Pithoragarh',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Rudraprayag',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Tehri Garhwal',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Udham Singh Nagar',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Uttarkashi',\n    othernamesspellings: '',\n    state: 'Uttarakhand',\n  },\n  {\n    district: 'Alipurduar',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Bankura',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Birbhum',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Cooch Behar',\n    othernamesspellings: 'Coochbehar',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Dakshin Dinajpur',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Darjeeling',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Hooghly',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Howrah',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Jalpaiguri',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Jhargram',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Kalimpong',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Kolkata',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Maldah',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Medinipur West',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Murshidabad',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Nadia',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'North 24 Parganas',\n    othernamesspellings: '24 paraganas north\\r',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Paschim Bardhaman',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Purba Bardhaman',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Medinipur East',\n    othernamesspellings: 'Purba Medinipur',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Purulia',\n    othernamesspellings: 'puruliya',\n    state: 'West Bengal',\n  },\n  {\n    district: 'South 24 Parganas',\n    othernamesspellings: '24 south parganas',\n    state: 'West Bengal',\n  },\n  {\n    district: 'Uttar Dinajpur',\n    othernamesspellings: '',\n    state: 'West Bengal',\n  },\n  {\n    district: '',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: '',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: '',\n    othernamesspellings: '',\n    state: 'Mizoram',\n  },\n  {\n    district: 'Tenkasi',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Chengalpattu',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Ranipet',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Kallakurichi',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n  {\n    district: 'Tirupathur',\n    othernamesspellings: '',\n    state: 'Tamil Nadu',\n  },\n];","import React from 'react';\nimport { Spinner } from 'design-system';\nimport { \n  ComposableMap, Geographies, Geography , ZoomableGroup, Marker\n} from 'react-simple-maps';\nimport query, {getQuery} from '../../query';\nimport { useQuery } from '@apollo/react-hooks';\nconst { useEffect, useState } = React;\nconst statesMapping = require('./statesMapping.json');\nconst latLong = require('./latLong.json');\n\nconst PROJECTION_CONFIG = {\n  scale: 350,\n  center: [78.9629, 22.5937]\n};\n\nconst getHeatMapData = data => {\n  const {states} = data;\n  const list = states.map(state => {\n    state.id = statesMapping[state.name];\n    return state;\n  });\n  return list;\n}\n\nconst DEFAULT_COLOR = '#f9e2e2';\n\nconst colorStyle = (value, total) => {\n  const percent = (value/total) * 100;\n    if (percent <= 2) return '#f9e2e2';\n    if (percent > 2 && percent <=4) return '#f7ada5';\n    if (percent > 4 && percent <= 8) return '#eb776c';\n    if (percent > 8 && percent <= 10) return '#d93737';\n    if (percent > 10 && percent <= 20) return '#9c2828';\n    return '#631919';\n}\n\nconst geoUrl =\n  \"https://rawgit.com/Anujarya300/bubble_maps/master/data/geography-data/india.topo.json\"\n\n  const HeatMapIndia = (props) => {\n    const [stroke, setStroke] = useState('white');\n    const { loading, error, data } = useQuery(query.stats.india);\n    const { loading : statsLoading, error : statsError, data: statsData } = useQuery(getQuery('country', 'india'));\n    console.log(statsData)\n    if (loading || statsLoading) {\n      return (\n        <div className=\"Spinner-container\">\n          <Spinner size=\"large\" appearance=\"primary\" />\n        </div>\n      );\n    }\n    if (error || statsError) {\n      return null;\n    }\n    const mapData = getHeatMapData(data);\n\n    return (\n      <div>\n          <ComposableMap projectionConfig={PROJECTION_CONFIG} projection=\"geoMercator\"\n        width={450}\n        height={200}>\n          {/* <ZoomableGroup zoom={1}> */}\n            <Geographies geography={geoUrl}>\n              {({geographies}) => geographies.map(geo => {\n                const current = mapData.find(s => s.id === geo.id);\n                console.log(current)\n                return (\n                  <Geography key={geo.rsmKey} geography={geo}\n                    stroke={ current && current.id === stroke ? 'red' : 'white' }\n                    className=\"Geography-path\"\n                    onMouseEnter={() => setStroke(current.id)}\n                    onMouseLeave={() => setStroke(null)}\n                    fill={current ? colorStyle(current.mostRecent.confirmed, statsData.country.mostRecent.confirmed) : DEFAULT_COLOR}\n                  />\n                )\n              }\n              \n              )}\n            </Geographies>\n          {/* {latLong.states.map(({ name, coordinates, markerOffset }) => (\n            <Marker key={name} coordinates={coordinates}>\n              <circle r={2} fill=\"#F00\" stroke=\"#fff\" strokeWidth={2} />\n              <text\n                textAnchor=\"middle\"\n                y={markerOffset}\n                style={{ fill: \"#5D5A6D\", fontSize: '8px' }}\n              >\n                {name}\n              </text>\n            </Marker>\n          ))} */}\n          {/* </ZoomableGroup> */}\n          </ComposableMap>\n        </div>\n    )\n  }\n\nexport default HeatMapIndia;","import moment from 'moment';\nimport {STATE_CODES} from './constants';\nimport {format as d3format} from 'd3';\n\nconst months = {\n  '01': 'Jan',\n  '02': 'Feb',\n  '03': 'Mar',\n  '04': 'Apr',\n  '05': 'May',\n  '06': 'Jun',\n  '07': 'Jul',\n  '08': 'Aug',\n  '09': 'Sep',\n  '10': 'Oct',\n  '11': 'Nov',\n  '12': 'Dec',\n};\n\nexport const getStateName = (code) => {\n  return STATE_CODES[code.toUpperCase()];\n};\n\nexport const formatDate = (unformattedDate) => {\n  const day = unformattedDate.slice(0, 2);\n  const month = unformattedDate.slice(3, 5);\n  const year = unformattedDate.slice(6, 10);\n  const time = unformattedDate.slice(11);\n  return `${year}-${month}-${day}T${time}+05:30`;\n};\n\nexport const formatDateAbsolute = (unformattedDate) => {\n  const day = unformattedDate.slice(0, 2);\n  const month = unformattedDate.slice(3, 5);\n  const time = unformattedDate.slice(11);\n  return `${day} ${months[month]}, ${time.slice(0, 5)} IST`;\n};\n\nconst validateCTS = (data = []) => {\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  const dataTypes = [\n    'dailyconfirmed',\n    'dailydeceased',\n    'dailyrecovered',\n    'totalconfirmed',\n    'totaldeceased',\n    'totalrecovered',\n  ];\n  return data\n    .filter((d) => dataTypes.every((dt) => d[dt]) && d.date)\n    .filter((d) => dataTypes.every((dt) => Number(d[dt]) >= 0))\n    .filter((d) => {\n      const year = today.getFullYear();\n      return new Date(d.date + year) < today;\n    });\n};\n\nexport const preprocessTimeseries = (timeseries) => {\n  return validateCTS(timeseries).map((stat) => ({\n    date: new Date(stat.date + ' 2020'),\n    totalconfirmed: +stat.totalconfirmed,\n    totalrecovered: +stat.totalrecovered,\n    totaldeceased: +stat.totaldeceased,\n    dailyconfirmed: +stat.dailyconfirmed,\n    dailyrecovered: +stat.dailyrecovered,\n    dailydeceased: +stat.dailydeceased,\n  }));\n};\n\n/**\n * Returns the last `days` entries\n * @param {Array<Object>} timeseries\n * @param {number} days\n *\n * @return {Array<Object>}\n */\nexport function sliceTimeseriesFromEnd(timeseries, days) {\n  return timeseries.slice(-days);\n}\n\nexport const formatNumber = (value, shrinkNumbers) => {\n  const numberFormatter = new Intl.NumberFormat('en-IN');\n  return isNaN(value)\n    ? '-'\n    : shrinkNumbers\n    ? d3format('.1~s')(value)\n    : numberFormatter.format(value);\n};\n\nexport const parseStateTimeseries = ({states_daily: data}) => {\n  const statewiseSeries = Object.keys(STATE_CODES).reduce((a, c) => {\n    a[c] = [];\n    return a;\n  }, {});\n\n  const today = moment();\n  for (let i = 0; i < data.length; i += 3) {\n    const date = moment(data[i].date, 'DD-MMM-YY');\n    // Skip data from the current day\n    if (date.isBefore(today, 'Date')) {\n      Object.entries(statewiseSeries).forEach(([k, v]) => {\n        const stateCode = k.toLowerCase();\n        const prev = v[v.length - 1] || {};\n        v.push({\n          date: date.toDate(),\n          dailyconfirmed: +data[i][stateCode] || 0,\n          dailyrecovered: +data[i + 1][stateCode] || 0,\n          dailydeceased: +data[i + 2][stateCode] || 0,\n          totalconfirmed: +data[i][stateCode] + (prev.totalconfirmed || 0),\n          totalrecovered: +data[i + 1][stateCode] + (prev.totalrecovered || 0),\n          totaldeceased: +data[i + 2][stateCode] + (prev.totaldeceased || 0),\n        });\n      });\n    }\n  }\n\n  return statewiseSeries;\n};","/* Source: https://observablehq.com/@d3/color-legend */\nimport * as d3 from 'd3';\n\nfunction legend({\n  color,\n  title,\n  tickSize = 6,\n  width = 320,\n  height = 44 + tickSize,\n  marginTop = 18,\n  marginRight = 0,\n  marginBottom = 16 + tickSize,\n  marginLeft = 0,\n  ticks = width / 64,\n  tickFormat,\n  tickValues,\n} = {}) {\n  const svg = d3\n    .create('svg')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('viewBox', [0, 0, width, height])\n    .style('overflow', 'visible')\n    .style('display', 'block');\n\n  let tickAdjust = (g) => {\n    const ticks = g.selectAll('.tick line');\n    ticks.attr('y1', marginTop + marginBottom - height);\n    d3.select(ticks.nodes()[ticks.size() - 1]).remove();\n  };\n  let x;\n\n  // Continuous\n  if (color.interpolate) {\n    const n = Math.min(color.domain().length, color.range().length);\n\n    x = color\n      .copy()\n      .rangeRound(\n        d3.quantize(d3.interpolate(marginLeft, width - marginRight), n)\n      );\n\n    svg\n      .append('image')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr(\n        'xlink:href',\n        ramp(\n          color.copy().domain(d3.quantize(d3.interpolate(0, 1), n))\n        ).toDataURL()\n      );\n  }\n\n  // Sequential\n  else if (color.interpolator) {\n    x = Object.assign(\n      color\n        .copy()\n        .interpolator(d3.interpolateRound(marginLeft, width - marginRight)),\n      {\n        range() {\n          return [marginLeft, width - marginRight];\n        },\n      }\n    );\n\n    svg\n      .append('image')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr('xlink:href', ramp(color.interpolator()).toDataURL());\n\n    // scaleSequentialQuantile doesn’t implement ticks or tickFormat.\n    if (!x.ticks) {\n      if (tickValues === undefined) {\n        const n = Math.round(ticks + 1);\n        tickValues = d3\n          .range(n)\n          .map((i) => d3.quantile(color.domain(), i / (n - 1)));\n      }\n      if (typeof tickFormat !== 'function') {\n        tickFormat = d3.format(tickFormat === undefined ? ',f' : tickFormat);\n      }\n    }\n  }\n\n  // Threshold\n  else if (color.invertExtent) {\n    const thresholds = color.thresholds\n      ? color.thresholds() // scaleQuantize\n      : color.quantiles\n      ? color.quantiles() // scaleQuantile\n      : color.domain(); // scaleThreshold\n\n    const thresholdFormat =\n      tickFormat === undefined\n        ? (d) => d\n        : typeof tickFormat === 'string'\n        ? d3.format(tickFormat)\n        : tickFormat;\n\n    x = d3\n      .scaleLinear()\n      .domain([-1, color.range().length - 1])\n      .rangeRound([marginLeft, width - marginRight]);\n\n    svg\n      .append('g')\n      .selectAll('rect')\n      .data(color.range())\n      .join('rect')\n      .attr('x', (d, i) => x(i - 1))\n      .attr('y', marginTop)\n      .attr('width', (d, i) => x(i) - x(i - 1))\n      .attr('height', height - marginTop - marginBottom)\n      .attr('fill', (d) => d);\n\n    tickValues = d3.range(-1, thresholds.length);\n    tickFormat = (i) => {\n      if (i === -1) return thresholdFormat(1);\n      else if (i === thresholds.length - 1) return;\n      else if (i === thresholds.length - 2)\n        return thresholdFormat(thresholds[i] + '+', i);\n      return thresholdFormat(thresholds[i], i);\n    };\n  }\n\n  // Ordinal\n  else {\n    x = d3\n      .scaleBand()\n      .domain(color.domain())\n      .rangeRound([marginLeft, width - marginRight]);\n\n    svg\n      .append('g')\n      .selectAll('rect')\n      .data(color.domain())\n      .join('rect')\n      .attr('x', x)\n      .attr('y', marginTop)\n      .attr('width', Math.max(0, x.bandwidth() - 1))\n      .attr('height', height - marginTop - marginBottom)\n      .attr('fill', color);\n\n    tickAdjust = () => {};\n  }\n\n  svg\n    .append('g')\n    .attr('transform', `translate(0,${height - marginBottom})`)\n    .call(\n      d3\n        .axisBottom(x)\n        .ticks(ticks, typeof tickFormat === 'string' ? tickFormat : undefined)\n        .tickFormat(typeof tickFormat === 'function' ? tickFormat : undefined)\n        .tickSize(tickSize)\n        .tickValues(tickValues)\n    )\n    .call(tickAdjust)\n    .call((g) => g.select('.domain').remove())\n    .call((g) =>\n      g\n        .append('text')\n        .attr('x', marginLeft)\n        .attr('y', marginTop + marginBottom - height - 6)\n        .attr('fill', 'currentColor')\n        .attr('text-anchor', 'start')\n        .attr('font-weight', 'bold')\n        .text(title)\n    );\n\n  return svg.node();\n}\n\nfunction ramp(color, n = 256) {\n  const canvas = document.createElement('canvas');\n  const context = ((canvas.width = n), (canvas.height = 1), canvas).getContext(\n    '2d'\n  );\n  for (let i = 0; i < n; ++i) {\n    context.fillStyle = color(i / (n - 1));\n    context.fillRect(i, 0, 1, 1);\n  }\n  return canvas;\n}\n\nexport default legend;","import React, {useCallback, useEffect, useRef, useState} from 'react';\nimport * as d3 from 'd3';\nimport * as topojson from 'topojson';\nimport {MAP_TYPES} from './constants';\nimport legend from './legend';\n\nconst propertyFieldMap = {\n  country: 'st_nm',\n  state: 'district',\n};\n\nfunction ChoroplethMap({\n  statistic,\n  mapData,\n  setHoveredRegion,\n  mapMeta,\n  changeMap,\n  selectedRegion,\n  setSelectedRegion,\n  isCountryLoaded,\n}) {\n  const choroplethMap = useRef(null);\n  const choroplethLegend = useRef(null);\n  const [svgRenderCount, setSvgRenderCount] = useState(0);\n\n  const ready = useCallback(\n    (geoData) => {\n      d3.selectAll('svg#chart > *').remove();\n\n      const propertyField = propertyFieldMap[mapMeta.mapType];\n      const svg = d3.select(choroplethMap.current);\n\n      const topology = topojson.feature(\n        geoData,\n        geoData.objects[mapMeta.graphObjectName]\n      );\n\n      const projection = d3.geoMercator();\n      // Set size of map\n      let path;\n      let width;\n      let height;\n      if (!svg.attr('viewBox')) {\n        const widthStyle = parseInt(svg.style('width'));\n        if (isCountryLoaded) projection.fitWidth(widthStyle, topology);\n        else {\n          const heightStyle = parseInt(svg.style('height'));\n          projection.fitSize([widthStyle, heightStyle], topology);\n        }\n        path = d3.geoPath(projection);\n        const bBox = path.bounds(topology);\n        width = +bBox[1][0];\n        height = +bBox[1][1];\n        svg.attr('viewBox', `0 0 ${width} ${height}`);\n      }\n      const bBox = svg.attr('viewBox').split(' ');\n      width = +bBox[2];\n      height = +bBox[3];\n      projection.fitSize([width, height], topology);\n      path = d3.geoPath(projection);\n\n      /* LEGEND */\n      const domainMax = Math.max(3, statistic.maxConfirmed);\n      const steps = Math.min(6, domainMax);\n      const domainMin = Math.max(2, Math.floor(statistic.maxConfirmed / steps));\n      const domain = Array.from(\n        {length: steps},\n        (e, i) => domainMin + i * Math.floor(domainMax / steps)\n      );\n\n      const svgLegend = d3.select(choroplethLegend.current);\n      svgLegend.selectAll('*').remove();\n      const colorScale = d3\n        .scaleThreshold()\n        .domain(domain)\n        .range(d3.schemeReds[steps]);\n      // Colorbar\n      const widthLegend = parseInt(svgLegend.style('width'));\n      const margin = {left: 0.02 * widthLegend, right: 0.02 * widthLegend};\n      const barWidth = widthLegend - margin.left - margin.right;\n      const heightLegend = +svgLegend.attr('height');\n      svgLegend\n        .append('g')\n        .style('transform', `translateX(${margin.left}px)`)\n        .append(() =>\n          legend({\n            color: colorScale,\n            title: 'Confirmed Cases',\n            width: barWidth,\n            height: 0.8 * heightLegend,\n          })\n        );\n      svgLegend.attr('viewBox', `0 0 ${widthLegend} ${heightLegend}`);\n\n      /* DRAW MAP */\n      let onceTouchedRegion = null;\n      const g = svg.append('g').attr('class', mapMeta.graphObjectName);\n      g.append('g')\n        .attr('class', 'states')\n        .selectAll('path')\n        .data(topology.features)\n        .join('path')\n        .attr('class', 'path-region')\n        .attr('fill', function (d) {\n          const n = parseInt(mapData[d.properties[propertyField]]) || 0;\n          const color = n === 0 ? '#ffffff' : colorScale(n);\n          return color;\n        })\n        .attr('d', path)\n        .attr('pointer-events', 'all')\n        .on('mouseover', (d) => {\n          handleMouseover(d.properties[propertyField]);\n        })\n        .on('mouseleave', (d) => {\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n        })\n        .on('touchstart', (d) => {\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n          else onceTouchedRegion = d;\n        })\n        .on('click', handleClick)\n        .style('cursor', 'pointer')\n        .append('title')\n        .text(function (d) {\n          const value = mapData[d.properties[propertyField]] || 0;\n          return (\n            Number(\n              parseFloat(100 * (value / (statistic.total || 0.001))).toFixed(2)\n            ).toString() +\n            '% from ' +\n            toTitleCase(d.properties[propertyField])\n          );\n        });\n\n      g.append('path')\n        .attr('class', 'borders')\n        .attr('stroke', '#ff073a20')\n        .attr('fill', 'none')\n        .attr('stroke-width', 2)\n        .attr(\n          'd',\n          path(topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectName]))\n        );\n\n      const handleMouseover = (name) => {\n        try {\n          setSelectedRegion(name);\n          setHoveredRegion(name, mapMeta);\n        } catch (err) {\n          console.log('err', err);\n        }\n      };\n\n      function handleClick(d) {\n        d3.event.stopPropagation();\n        if (onceTouchedRegion || mapMeta.mapType === MAP_TYPES.STATE) return;\n        changeMap(d.properties[propertyField]);\n      }\n\n      // Reset on tapping outside map\n      svg.on('click', () => {\n        setSelectedRegion(null);\n        if (mapMeta.mapType === MAP_TYPES.COUNTRY)\n          setHoveredRegion('Total', mapMeta);\n      });\n    },\n    [\n      mapData,\n      mapMeta,\n      statistic.total,\n      statistic.maxConfirmed,\n      changeMap,\n      setHoveredRegion,\n      setSelectedRegion,\n      isCountryLoaded,\n    ]\n  );\n\n  const toTitleCase = (str) => {\n    str = str.toLowerCase().split(' ');\n    for (let i = 0; i < str.length; i++) {\n      str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\n    }\n    return str.join(' ');\n  };\n\n  useEffect(() => {\n    (async () => {\n      const data = await d3.json(mapMeta.geoDataFile);\n      if (statistic && choroplethMap.current) {\n        ready(data);\n        setSvgRenderCount((prevCount) => prevCount + 1);\n      }\n    })();\n  }, [mapMeta.geoDataFile, statistic, ready]);\n\n  const highlightRegionInMap = (name) => {\n    const paths = d3.selectAll('.path-region');\n    paths.classed('map-hover', (d, i, nodes) => {\n      const propertyField =\n        'district' in d.properties\n          ? propertyFieldMap['state']\n          : propertyFieldMap['country'];\n      if (name === d.properties[propertyField]) {\n        nodes[i].parentNode.appendChild(nodes[i]);\n        return true;\n      }\n      return false;\n    });\n  };\n\n  useEffect(() => {\n    highlightRegionInMap(selectedRegion);\n  }, [svgRenderCount, selectedRegion]);\n\n  return (\n    <div>\n      <div className=\"svg-parent fadeInUp\" style={{animationDelay: '2.5s'}}>\n        <svg\n          id=\"chart\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          ref={choroplethMap}\n        ></svg>\n      </div>\n      <div\n        className=\"svg-parent legend fadeInUp\"\n        style={{animationDelay: '2.5s'}}\n      >\n        <svg\n          id=\"legend\"\n          height=\"65\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          ref={choroplethLegend}\n        ></svg>\n      </div>\n    </div>\n  );\n}\n\nexport default ChoroplethMap;","import React, {useState, useEffect, useMemo, useCallback} from 'react';\nimport ChoroplethMap from './choropleth';\nimport {MAP_TYPES, MAP_META} from './constants';\nimport {formatDate, formatDateAbsolute, formatNumber} from './common-functions';\nimport {formatDistance, format, parse} from 'date-fns';\nimport { Heading, Message, Row, Column, Button } from 'design-system';\nimport './Map.css';\n\nconst getRegionFromState = (state) => {\n  // debugger\n  if (!state) return;\n  const region = {...state};\n  if (!region.name) region.name = region.state;\n  return region;\n};\n\nconst getRegionFromDistrict = (districtData, name) => {\n  if (!districtData) return;\n  const region = {...districtData};\n  if (!region.name) region.name = name;\n  return region;\n};\n\nfunction MapExplorer({\n  forwardRef,\n  mapMeta,\n  states,\n  stateDistrictWiseData,\n  stateTestData,\n  regionHighlighted,\n  onMapHighlightChange,\n  isCountryLoaded,\n}) {\n  const [selectedRegion, setSelectedRegion] = useState({});\n  const [panelRegion, setPanelRegion] = useState(getRegionFromState(states[0]));\n  const [currentHoveredRegion, setCurrentHoveredRegion] = useState(\n    getRegionFromState(states[0])\n  );\n  const [testObj, setTestObj] = useState({});\n  const [currentMap, setCurrentMap] = useState(mapMeta);\n\n  const [statistic, currentMapData] = useMemo(() => {\n    const statistic = {total: 0, maxConfirmed: 0};\n    let currentMapData = {};\n\n    if (currentMap.mapType === MAP_TYPES.COUNTRY) {\n      currentMapData = states.reduce((acc, state) => {\n        if (state.state === 'Total') {\n          return acc;\n        }\n        const confirmed = parseInt(state.confirmed);\n        statistic.total += confirmed;\n        if (confirmed > statistic.maxConfirmed) {\n          statistic.maxConfirmed = confirmed;\n        }\n\n        acc[state.state] = state.confirmed;\n        return acc;\n      }, {});\n    } else if (currentMap.mapType === MAP_TYPES.STATE) {\n      const districtWiseData = (\n        stateDistrictWiseData[currentMap.name] || {districtData: {}}\n      ).districtData;\n      currentMapData = Object.keys(districtWiseData).reduce((acc, district) => {\n        const confirmed = parseInt(districtWiseData[district].confirmed);\n        statistic.total += confirmed;\n        if (confirmed > statistic.maxConfirmed) {\n          statistic.maxConfirmed = confirmed;\n        }\n        acc[district] = districtWiseData[district].confirmed;\n        return acc;\n      }, {});\n    }\n    return [statistic, currentMapData];\n  }, [currentMap, states, stateDistrictWiseData]);\n\n  const setHoveredRegion = useCallback(\n    (name, currentMap) => {\n      if (currentMap.mapType === MAP_TYPES.COUNTRY) {\n        const region = getRegionFromState(\n          states.find((state) => name === state.state)\n        );\n        setCurrentHoveredRegion(region);\n        setPanelRegion(region);\n        onMapHighlightChange(region);\n      } else if (currentMap.mapType === MAP_TYPES.STATE) {\n        const state = stateDistrictWiseData[currentMap.name] || {\n          districtData: {},\n        };\n        let districtData = state.districtData[name];\n        if (!districtData) {\n          districtData = {\n            confirmed: 0,\n            active: 0,\n            deaths: 0,\n            recovered: 0,\n          };\n        }\n        setCurrentHoveredRegion(getRegionFromDistrict(districtData, name));\n        const panelRegion = getRegionFromState(\n          states.find((state) => currentMap.name === state.state)\n        );\n        setPanelRegion(panelRegion);\n        if (onMapHighlightChange) onMapHighlightChange(panelRegion);\n      }\n    },\n    [states, stateDistrictWiseData, onMapHighlightChange]\n  );\n\n  useEffect(() => {\n    if (regionHighlighted === undefined || regionHighlighted === null) return;\n\n    const isState = !('district' in regionHighlighted);\n    if (isState) {\n      const newMap = MAP_META['India'];\n      setCurrentMap(newMap);\n      const region = getRegionFromState(regionHighlighted.state);\n      setHoveredRegion(region.name, newMap);\n      setSelectedRegion(region.name);\n    } else {\n      const newMap = MAP_META[regionHighlighted.state.state];\n      if (!newMap) {\n        return;\n      }\n      setCurrentMap(newMap);\n      setHoveredRegion(regionHighlighted.district, newMap);\n      setSelectedRegion(regionHighlighted.district);\n    }\n  }, [regionHighlighted, setHoveredRegion]);\n\n  const switchMapToState = useCallback(\n    (name) => {\n      const newMap = MAP_META[name];\n      if (!newMap) {\n        return;\n      }\n      setCurrentMap(newMap);\n      setSelectedRegion(null);\n      if (newMap.mapType === MAP_TYPES.COUNTRY) {\n        setHoveredRegion(states[0].state, newMap);\n      } else if (newMap.mapType === MAP_TYPES.STATE) {\n        const {districtData} = stateDistrictWiseData[name] || {};\n        const topDistrict = Object.keys(districtData)\n          .filter((name) => name !== 'Unknown')\n          .sort((a, b) => {\n            return districtData[b].confirmed - districtData[a].confirmed;\n          })[0];\n        setHoveredRegion(topDistrict, newMap);\n        setSelectedRegion(topDistrict);\n      }\n    },\n    [setHoveredRegion, stateDistrictWiseData, states]\n  );\n\n  const {name, lastupdatedtime} = currentHoveredRegion;\n\n  useEffect(() => {\n    setTestObj(\n      stateTestData.find(\n        (obj) => obj.state === panelRegion.name && obj.totaltested !== ''\n      )\n    );\n  }, [panelRegion, stateTestData, testObj]);\n\n  return (\n    <div\n      className=\"MapExplorer fadeInUp\"\n      style={{animationDelay: '1.5s'}}\n      ref={forwardRef}\n    >\n      \n      <div className=\"Map-header\">\n        <Heading size=\"l\">{currentMap.name} Map</Heading>\n        <Heading appearance=\"subtle\" size=\"m\">\n          {window.innerWidth <= 769 ? 'Tap' : 'Hover'} over a{' '}\n            {currentMap.mapType === MAP_TYPES.COUNTRY ? 'state/UT' : 'district'}{' '}\n            for more details\n        </Heading>\n      </div>\n\n\n      <div className=\"Map-stats\">\n        <div className=\"Map-stats-item fadeInUp\" style={{animationDelay: '2s'}}>\n          <h5>{window.innerWidth <= 769 ? 'Cnfmd' : 'Confirmed'}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.confirmed)}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n\n        <div\n          className=\"Map-stats-item Map-stats-item--blue fadeInUp\"\n          style={{animationDelay: '2.1s'}}\n        >\n          <h5>{window.innerWidth <= 769 ? 'Actv' : 'Active'}</h5>\n          <h1>{formatNumber(panelRegion.active)}</h1>\n        </div>\n\n        <div\n          className=\"Map-stats-item Map-stats-item--green fadeInUp\"\n          style={{animationDelay: '2.2s'}}\n        >\n          <h5>{window.innerWidth <= 769 ? 'Rcvrd' : 'Recovered'}</h5>\n          <h1>{formatNumber(panelRegion.recovered)}</h1>\n        </div>\n\n        <div\n          className=\"Map-stats-item Map-stats-item--gray fadeInUp\"\n          style={{animationDelay: '2.3s'}}\n        >\n          <h5>{window.innerWidth <= 769 ? 'Dcsd' : 'Deceased'}</h5>\n          <h1>{formatNumber(panelRegion.deaths)}</h1>\n        </div>\n\n          <div\n            className=\"Map-stats-item Map-stats-item--purple tested fadeInUp\"\n            style={{animationDelay: '2.4s'}}\n          >\n            <h5>{window.innerWidth <= 769 ? 'Tested' : 'Tested'}</h5>\n            <h1>\n              {formatNumber(testObj?.totaltested, window.innerWidth <= 769)}\n            </h1>\n            <h6 className=\"timestamp\">\n              {!isNaN(parse(testObj?.updatedon, 'dd/MM/yyyy', new Date()))\n                ? `As of ${format(\n                    parse(testObj?.updatedon, 'dd/MM/yyyy', new Date()),\n                    'dd MMM'\n                  )}`\n                : ''}\n            </h6>\n            {/* {testObj?.totaltested?.length > 1 && (\n              <a href={testObj.source} target=\"_noblank\">\n                <Icon.Link />\n              </a>\n            )} */}\n          </div>\n      </div>\n\n      <div className=\"Map-meta fadeInUp\" style={{animationDelay: '2.4s'}}>\n        <h2>{name}</h2>\n        {lastupdatedtime && (\n          <div\n            className={`Map-meta-last-update ${\n              currentMap.mapType === MAP_TYPES.STATE\n                ? 'district-last-update'\n                : 'state-last-update'\n            }`}\n          >\n            <h6>Last updated</h6>\n            <h3\n              title={\n                isNaN(Date.parse(formatDate(lastupdatedtime)))\n                  ? ''\n                  : formatDateAbsolute(lastupdatedtime)\n              }\n            >\n              {isNaN(Date.parse(formatDate(lastupdatedtime)))\n                ? ''\n                : formatDistance(\n                    new Date(formatDate(lastupdatedtime)),\n                    new Date()\n                  ) + ' ago'}\n            </h3>\n          </div>\n        )}\n\n        {currentMap.mapType === MAP_TYPES.STATE &&\n        currentHoveredRegion.name !== currentMap.name ? (\n          <h1 className=\"district-confirmed\">\n            {currentMapData[currentHoveredRegion.name]\n              ? currentMapData[currentHoveredRegion.name]\n              : 0}\n            <br />\n            <span style={{fontSize: '0.75rem', fontWeight: 600}}>\n              confirmed\n            </span>\n          </h1>\n        ) : null}\n\n        {currentMap.mapType === MAP_TYPES.STATE &&\n        currentMapData.Unknown > 0 ? (\n          <h4 className=\"unknown\">\n            Districts unknown for {currentMapData.Unknown} people\n          </h4>\n        ) : null}\n\n        {currentMap.mapType === MAP_TYPES.STATE ? (\n          <Button appearance=\"basic\" size=\"tiny\" onClick={() => switchMapToState('India')}>\n            Back\n          </Button>\n        ) : null}\n      </div>\n\n      <ChoroplethMap\n        statistic={statistic}\n        mapMeta={currentMap}\n        mapData={currentMapData}\n        setHoveredRegion={setHoveredRegion}\n        changeMap={switchMapToState}\n        selectedRegion={selectedRegion}\n        setSelectedRegion={setSelectedRegion}\n        isCountryLoaded={isCountryLoaded}\n      />\n    </div>\n  );\n}\n\nexport default MapExplorer;","import React, {useState, useEffect, useRef, useCallback} from 'react';\nimport './App.css';\nimport Summary from './Summary';\nimport { Row, Column, Message, Text } from 'design-system';\nimport HeatMapIndia from './HeatMaps/India';\nimport {MAP_META} from './Map/constants';\nimport axios from 'axios';\nimport {\n  formatDate,\n  formatDateAbsolute,\n  preprocessTimeseries,\n  parseStateTimeseries,\n} from './Map/common-functions';\nimport MapExplorer from './Map';\n\nconst columnOptions = {\n  size: \"12\",\n  sizeXL: \"6\",\n  sizeL: \"12\",\n  sizeM: \"6\",\n  sizeS: \"6\"\n};\n\nconst getLegends = () => {\n  return (\n    <ul className=\"Summary-list mt-4\">\n      <li className=\"Summary-list-item\" key=\"0\">\n        <div className=\"Legend Legend--mirch-lightest\"></div>\n        <Text> &#60;&#61; 2%</Text>\n      </li>\n      <li className=\"Summary-list-item\" key=\"1\">\n        <div className=\"Legend Legend--mirch-lighter\"></div>\n        <Text> &#62; 2% and &#60;&#61; 4% </Text>\n      </li>\n      <li className=\"Summary-list-item\" key=\"2\">\n        <div className=\"Legend Legend--mirch-light\"></div>\n        <Text> &#62; 4% and &#60;&#61; 8% </Text>\n      </li>\n      <li className=\"Summary-list-item\" key=\"3\">\n        <div className=\"Legend Legend--mirch\"></div>\n        <Text> &#62; 8% and &#60;&#61; 10% </Text>\n      </li>\n      <li className=\"Summary-list-item\" key=\"4\">\n        <div className=\"Legend Legend--mirch-dark\"></div>\n        <Text> &#62; 10% and &#60;&#61; 20% </Text>\n      </li>\n      <li className=\"Summary-list-item\" key=\"5\">\n        <div className=\"Legend Legend--mirch-darker\"></div>\n        <Text> &#62; 20%</Text>\n      </li>\n    </ul>\n  )\n}\n\nconst App = () => {\n  const [states, setStates] = useState([]);\n  const [stateDistrictWiseData, setStateDistrictWiseData] = useState({});\n  const [stateTestData, setStateTestData] = useState({});\n  const [fetched, setFetched] = useState(false);\n  const [graphOption, setGraphOption] = useState(1);\n  const [lastUpdated, setLastUpdated] = useState('');\n  const [timeseries, setTimeseries] = useState({});\n  const [activeStateCode, setActiveStateCode] = useState('TT'); // TT -> India\n  const [timeseriesMode, setTimeseriesMode] = useState(true);\n  const [timeseriesLogMode, setTimeseriesLogMode] = useState(false);\n  const [regionHighlighted, setRegionHighlighted] = useState(undefined);\n  const [showUpdates, setShowUpdates] = useState(false);\n\n  useEffect(() => {\n    if (fetched === false) {\n      getStates();\n    }\n  }, [fetched]);\n\n  const getStates = async () => {\n    try {\n      const [\n        {data},\n        stateDistrictWiseResponse,\n        {data: statesDailyResponse},\n        {data: stateTestData},\n      ] = await Promise.all([\n        axios.get('https://api.covid19india.org/data.json'),\n        axios.get('https://api.covid19india.org/state_district_wise.json'),\n        axios.get('https://api.covid19india.org/states_daily.json'),\n        axios.get('https://api.covid19india.org/state_test_data.json'),\n      ]);\n      setStates(data.statewise);\n      // const ts = parseStateTimeseries(statesDailyResponse);\n      // ts['TT'] = preprocessTimeseries(data.cases_time_series); // TT -> India\n      // setTimeseries(ts);\n      setLastUpdated(data.statewise[0].lastupdatedtime);\n      const testData = stateTestData.states_tested_data.reverse();\n      const totalTest = data.tested[data.tested.length - 1];\n      testData.push({\n        updatedon: totalTest.updatetimestamp.split(' ')[0],\n        totaltested: totalTest.totalindividualstested,\n        source: totalTest.source,\n        state: 'Total', // India\n      });\n      setStateTestData(testData);\n      setStateDistrictWiseData(stateDistrictWiseResponse.data);\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onHighlightState = (state, index) => {\n    if (!state && !index) return setRegionHighlighted(null);\n    setRegionHighlighted({state, index});\n  };\n  const onHighlightDistrict = (district, state, index) => {\n    if (!state && !index && !district) return setRegionHighlighted(null);\n    setRegionHighlighted({district, state, index});\n  };\n\n  const onMapHighlightChange = useCallback(({statecode}) => {\n    setActiveStateCode(statecode);\n  }, []);\n\n  const refs = [useRef(), useRef(), useRef()];\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-body\">\n        <Row>\n          <Column {...columnOptions}>\n            <div style={{display: 'flex', justifyContent: 'center'}}>\n              {fetched && (\n                <MapExplorer\n                  forwardRef={refs[1]}\n                  mapMeta={MAP_META.India}\n                  states={states}\n                  stateDistrictWiseData={stateDistrictWiseData}\n                  stateTestData={stateTestData}\n                  regionHighlighted={regionHighlighted}\n                  onMapHighlightChange={onMapHighlightChange}\n                  isCountryLoaded={true}\n                />\n              )}\n            </div>\n          </Column>\n          <Column {...columnOptions}>\n            <div className=\"p-6\">\n              <Message appearance=\"info\">\n                This portal is not responsible for any kind of misinformation provided as all the data is from referenced data sources.\n              </Message>\n              {/* <Text appearance=\"subtle\" weight=\"strong\" size=\"large\">Heat map of India (Confirmed cases)</Text>\n              {getLegends()} */}\n            </div>\n          </Column>\n\n        </Row>\n        {/* <Row>\n          <Column {...columnOptions}>\n            <HeatMapIndia />\n          </Column>\n          <Column {...columnOptions}>\n            <div className=\"p-6\">\n              <Message appearance=\"info\">\n                This portal is not responsible for any kind of misinformation provided as all the data is from referenced data sources.\n              </Message>\n              <Text appearance=\"subtle\" weight=\"strong\" size=\"large\">Heat map of India (Confirmed cases)</Text>\n              {getLegends()}\n            </div>\n          </Column>\n        </Row> */}\n        <Row>\n          <Column {...columnOptions}>\n            <Summary entity=\"world\" type=\"world\" showLink={true} />\n          </Column>\n          <Column {...columnOptions}>\n            <Summary entity=\"india\" type=\"country\" showLink={true} />\n          </Column>\n        </Row>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import ApolloClient from 'apollo-boost';\n\nexport const client = new ApolloClient({\n  uri: 'https://covid-tracker-news-graphql.aregee.now.sh/',\n});\n\n","import React from 'react';\nimport { Heading } from 'design-system';\n\nconst Header = () => {\n  return (\n    <header className=\"App-header\">\n      <Heading size=\"l\" appearance=\"white\">\n        Covid-19\n      </Heading>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { Link, Text } from 'design-system';\nimport { useHistory } from 'react-router-dom';\n\nconst Footer = props => {\n  const year = new Date().getFullYear();\n  let history = useHistory();\n\n  return (\n    <footer className=\"App-footer\">\n      <Text\n        appearance=\"white\"\n        weight=\"strong\"\n      >\n        &copy; Copyright { year } Sandesh Choudhary\n      </Text>\n      <Link onClick={() => history.push('/references')}>References</Link>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport { Link, Breadcrumb, BreadcrumbsWrapper, Table, Text, Row, Column, Spinner, Input } from 'design-system';\nimport { useHistory } from \"react-router-dom\";\nimport query from '../query';\nimport { useQuery } from '@apollo/react-hooks';\nimport './Stats.css';\nimport { ComposedChart, XAxis, YAxis, Tooltip, Legend, CartesianGrid, Area, Bar, Line, ResponsiveContainer } from 'recharts';\nconst { useEffect, useState } = React;\n\n\nconst columnOptions = {\n  size: \"12\",\n  sizeXL: \"6\",\n  sizeL: \"12\",\n  sizeM: \"6\",\n  sizeS: \"6\"\n};\n\nconst Stats = props => {\n  const { entity } = props;\n  let history = useHistory();\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleSearch = value => {\n    setSearchQuery(value);\n  }\n\n  const handleDrill = id => {\n    history.push(`/${entity}/detail/${id}`)\n  }\n\n  const schema = [\n    {\n      width: 200,\n      pinned: false ? 'LEFT' : undefined,\n      template: ({ x, rowIndex }) => (\n        <div className=\"Stat-table-cell\">\n          <Link onClick={() => handleDrill(x)}>{x}</Link>\n        </div>\n      ),\n      get: ({ name }) => ({\n        x: name,\n      }),\n      header: () => <div className=\"Stat-table-cell\"><Text weight=\"strong\">Name</Text></div>,\n    },\n    {\n      width: 100,\n      pinned: false ? 'LEFT' : undefined,\n      template: ({ x, rowIndex }) => (\n        <div className=\"Stat-table-cell\">\n          {x}\n        </div>\n      ),\n      get: ({ mostRecent }) => ({\n        x: mostRecent.confirmed,\n      }),\n      header: () => <div className=\"Stat-table-cell\"><Text weight=\"strong\">Confirmed</Text></div>,\n    },\n    {\n      width: 100,\n      pinned: false ? 'LEFT' : undefined,\n      template: ({ x, rowIndex }) => (\n        <div className=\"Stat-table-cell\">\n          {x}\n        </div>\n      ),\n      get: ({ mostRecent }) => ({\n        x: mostRecent.recovered,\n      }),\n      header: () => <div className=\"Stat-table-cell\"><Text weight=\"strong\">Recovered</Text></div>,\n    },\n    {\n      width: 100,\n      pinned: false ? 'LEFT' : undefined,\n      template: ({ x, rowIndex }) => (\n        <div className=\"Stat-table-cell\">\n          {x}\n        </div>\n      ),\n      get: ({ mostRecent }) => ({\n        x: mostRecent.deaths,\n      }),\n      header: () => <div className=\"Stat-table-cell\"><Text weight=\"strong\">Deaths</Text></div>,\n    }\n  ]\n\n  const getData = (entity, data = {}) => {\n    const list = entity === 'india' ? data.states : data.countries;\n    if (!list) return [];\n    return list.filter(item => {\n      return item.name.toLowerCase().indexOf(searchQuery.toLowerCase()) > -1;\n    });\n  }\n\n  const { loading, error, data } = useQuery(query.stats[entity]);\n\n  return (\n    <div className=\"Stats-container\">\n      <header>\n        <BreadcrumbsWrapper\n          heading={entity === 'india' ? 'State wise Data' : 'Country wise Data'}\n        >\n          <Breadcrumb>\n            <div className=\"Breadcrumb-link\">\n              <Link onClick={() => history.push('/')}>HOME</Link>\n            </div>\n          </Breadcrumb>\n        </BreadcrumbsWrapper>\n      </header>\n\n      {error && (\n        <div>error...</div>\n      )}\n\n      {!error && (\n        <div className=\"Stats-body\">\n          <Row>\n            <Input clearButton={true}\n              value={searchQuery}\n              icon=\"search\"\n              name=\"input\"\n              placeholder=\"Search\"\n              onChange={ev => handleSearch(ev.target.value) }\n              onClear={() => handleSearch('')}\n              info=\"Search on name\" />\n          </Row>\n          <Row>\n            <Column {...columnOptions}>\n              <Table\n                style={{\n                  maxHeight: 'calc(100vh - 300px)'\n                }}\n                loadMore={() => null}\n                loading={loading}\n                loadingMoreData={false}\n                getGridActions={false ? undefined : undefined}\n                buffer={5}\n                dynamicRowHeight={false}\n                rowHeight={50}\n                headerHeight={40}\n                virtualization={false}\n                schema={schema}\n                data={getData(entity, data)}\n              />\n            </Column>\n            <Column {...columnOptions}>\n              {loading && (\n                <div className=\"Spinner-container\">\n                  <Spinner size=\"large\" appearance=\"primary\" />\n                </div>\n              )}\n              {!loading && (\n                <ResponsiveContainer width={'100%'} height={250}>\n                  <ComposedChart data={getData(entity, data)}>\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <CartesianGrid stroke=\"#f5f5f5\" />\n                    <Area name=\"Recovered\" type=\"monotone\" dataKey=\"mostRecent[recovered]\" fill=\"#71c077\" stroke=\"#2ea843\" />\n                    <Bar name=\"Confirmed\" dataKey=\"mostRecent[confirmed]\" barSize={20} fill=\"#0070dd\" />\n                    <Line name=\"Deaths\" type=\"monotone\" dataKey=\"mostRecent[deaths]\" stroke=\"#d93737\" />\n                  </ComposedChart>\n                </ResponsiveContainer>\n              )}\n            </Column>\n          </Row>\n        </div>                                    \n      )}\n    </div>  \n  );\n}\n\nexport default Stats;\n","import React from 'react';\nimport { BreadcrumbsWrapper, Breadcrumb, Link, Column, Row, Text, Table } from 'design-system';\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Summary from '../Summary';\nimport './Detail.css';\nimport HeatMapIndiaState from '../HeatMaps/InidaState';\nimport axios from 'axios';\nconst { useEffect, useState } = React;\n\nconst columnOptions = {\n  size: \"12\",\n  sizeXL: \"6\",\n  sizeL: \"12\",\n  sizeM: \"6\",\n  sizeS: \"6\"\n};\n\nconst mapData = data => {\n  return Object.entries(data.districtData).map((e) => ( { name: e[0], data:  e[1] } ));\n}\n\nconst schema = [\n  {\n    width: 200,\n    pinned: false ? 'LEFT' : undefined,\n    template: ({ x, rowIndex }) => (\n      <div className=\"Stat-table-cell\">\n        <Link onClick={() => null}>{x}</Link>\n      </div>\n    ),\n    get: ({ name }) => ({\n      x: name,\n    }),\n    header: () => <div className=\"Stat-table-cell\"><Text weight=\"strong\">Name</Text></div>,\n  },\n  {\n    width: 200,\n    pinned: false ? 'LEFT' : undefined,\n    template: ({ x, rowIndex }) => (\n      <div className=\"Stat-table-cell\">\n        {x}\n      </div>\n    ),\n    get: ({ data }) => ({\n      x: data.confirmed,\n    }),\n    header: () => <div className=\"Stat-table-cell\"><Text weight=\"strong\">Confirmed Cases</Text></div>,\n  }\n]\n\nconst Detail = props => {\n  const { entity } = props;\n  let history = useHistory();\n  const params = useParams();\n  const stateName = params.id;\n  const [stateData, setStateData] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    axios(`https://api.covid19india.org/state_district_wise.json`)\n      .then(res => {\n        setStateData(mapData(res.data[stateName]));\n        setLoading(false);\n      })\n      .catch(err => {\n        setLoading(false);\n      });\n  }, [stateName])\n\n  return (\n    <div className=\"Detail-container\">\n      <header>\n        <BreadcrumbsWrapper\n          heading={`${params.id} - Breakdown`}\n        >\n          <Breadcrumb>\n            <div className=\"Breadcrumb-link\">\n              <Link onClick={() => history.push('/')}>HOME</Link>\n            </div>\n          </Breadcrumb>\n          <Breadcrumb>\n            <div className=\"Breadcrumb-link\">\n              <Link onClick={() => history.push(`/${entity}`)}>{entity.toUpperCase()}</Link>\n            </div>\n          </Breadcrumb>\n        </BreadcrumbsWrapper>\n      </header>\n      <div className=\"Detail-body\">\n        <Row>\n          <Column {...columnOptions}>\n            <Summary entity={params.id} type={entity === 'world' ? 'country' : 'state'} />\n          </Column>\n          { (entity === 'india') && (\n            <Column {...columnOptions}>\n              <Table\n                style={{\n                  maxHeight: 'calc(100vh - 222px)',\n                  marginLeft: '16px'\n                }}\n                loadMore={() => null}\n                loading={isLoading}\n                loadingMoreData={false}\n                getGridActions={false ? undefined : undefined}\n                buffer={5}\n                dynamicRowHeight={false}\n                rowHeight={50}\n                headerHeight={40}\n                virtualization={false}\n                schema={schema}\n                data={stateData}\n              />\n            </Column>\n          )}\n        </Row>\n        {/* <div style={{padding: '50px'}}>\n          <HeatMapIndiaState state={params.id} />\n        </div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default Detail;\n","import React from 'react';\nimport { Spinner } from 'design-system';\nimport { \n  ComposableMap, Geographies, Geography , ZoomableGroup, Marker\n} from 'react-simple-maps';\n\nconst topoMapping = require('./topoMapping.json');\n\nconst PROJECTION_CONFIG = {\n  scale: 350,\n  center: [78.9629, 22.5937]\n};\n\nconst DEFAULT_COLOR = '#f9e2e2';\n\n\n// const geoUrl =\n//   \"https://raw.githubusercontent.com/shklnrj/IndiaStateTopojsonFiles/master/Rajasthan.topojson\"\n\n  const HeatMapIndiaState = (props) => {\n    const { state } = props;\n    const geoUrl = topoMapping[state].url;\n    console.log(geoUrl)\n    if (!geoUrl) return null;\n\n    return (\n        <ComposableMap projectionConfig={PROJECTION_CONFIG} projection=\"geoMercator\"\n          width={450}\n          height={200}\n        >\n          {/* <ZoomableGroup zoom={1}> */}\n          <Geographies geography={geoUrl}>\n            {({geographies}) => geographies.map(geo => {\n              return (\n                <Geography key={geo.rsmKey} geography={geo}\n                  fill=\"green\"\n                />\n              )\n            }\n            )}\n          </Geographies>\n          {/* </ZoomableGroup> */}\n        </ComposableMap>\n      \n    )\n  }\n\nexport default HeatMapIndiaState;","import React from 'react';\nimport './References.css';\nimport { useHistory } from \"react-router-dom\";\nimport { BreadcrumbsWrapper, Breadcrumb, Link, Heading, Table, Text } from 'design-system';\n\nconst schema = [\n  {\n    width: 300,\n    template: ({ x, rowIndex }) => (\n      <div className=\"Stat-table-cell\">\n        <Text>{x}</Text>\n      </div>\n    ),\n    get: ({ name }) => ({\n      x: name,\n    }),\n    header: () => <div className=\"Stat-table-cell\"><Text weight=\"strong\">Name</Text></div>,\n  },\n  {\n    width: 300,\n    template: ({ x, rowIndex }) => (\n      <div className=\"Stat-table-cell\">\n        <Link>{x}</Link>\n      </div>\n    ),\n    get: ({ link }) => ({\n      x: link,\n    }),\n    header: () => <div className=\"Stat-table-cell\"><Text weight=\"strong\">Link</Text></div>,\n  }\n];\n\nconst data = [\n  {\n    name: \"World Health Organization (WHO)\",\n    link: \"https://www.who.int/\"\n  },\n  {\n    name: \"DXY.cn. Pneumonia. 2020.\",\n    link: \"http://3g.dxy.cn/newh5/view/pneumonia\"\n  },\n  {\n    name: \"BNO News\",\n    link: \"https://bnonews.com/index.php/2020/02/the-latest-coronavirus-cases/\"\n  },\n  {\n    name: \"National Health Commission of the People’s Republic of China (NHC)\",\n    link: \"http://www.nhc.gov.cn/xcs/yqtb/list_gzbd.shtml\"\n  },\n  {\n    name: \"China CDC (CCDC)\",\n    link: \"http://weekly.chinacdc.cn/news/TrackingtheEpidemic.htm\"\n  },\n  {\n    name: \"Hong Kong Department of Health\",\n    link: \"https://www.chp.gov.hk/en/features/102465.html\"\n  },\n  {\n    name: \"Macau Government\",\n    link: \"https://www.ssm.gov.mo/portal/\"\n  },\n  {\n    name: \"Taiwan CDC\",\n    link: \"https://sites.google.com/cdc.gov.tw/2019ncov/taiwan?authuser=0\"\n  },\n  {\n    name: \"US CDC\",\n    link: \"https://www.cdc.gov/coronavirus/2019-ncov/index.html\"\n  },\n  {\n    name: \"Government of Canada\",\n    link: \"https://www.canada.ca/en/public-health/services/diseases/coronavirus.html\"\n  },\n  {\n    name: \"Australia Government Department of Health\",\n    link: \"https://www.health.gov.au/news/coronavirus-update-at-a-glance\"\n  },\n  {\n    name: \"European Centre for Disease Prevention and Control (ECDC)\",\n    link: \"https://www.ecdc.europa.eu/en/geographical-distribution-2019-ncov-cases\"\n  },\n  {\n    name: \"Ministry of Health Singapore (MOH)\",\n    link: \"https://www.moh.gov.sg/covid-19\"\n  },\n  {\n    name: \"Italy Ministry of Health\",\n    link: \"http://www.salute.gov.it/nuovocoronavirus\"\n  },\n  {\n    name: \"1Point3Arces\",\n    link: \"https://coronavirus.1point3acres.com/en\"\n  },\n  {\n    name: \"WorldoMeters\",\n    link: \"https://www.worldometers.info/coronavirus/\"\n  },\n  {\n    name: \"COVID Tracking Project\",\n    link: \"https://covidtracking.com/data\"\n  },\n  {\n    name: \"NDTV Covid-19 Data\",\n    link: \"https://edata.ndtv.com/cricket/coronavirus/data.json\"\n  },\n  {\n    name: \"COVID19-India API\",\n    link: \"https://api.covid19india.org/\"\n  },\n  {\n    name: \"COVID19-India\",\n    link: \"https://www.covid19india.org/\"\n  },\n];\n\nconst References = () => {\n  let history = useHistory();\n\n  return (\n    <div className=\"References-container\">\n      <BreadcrumbsWrapper heading=\"References\">\n        <Breadcrumb>\n          <div className=\"Breadcrumb-link\">\n            <Link onClick={() => history.push('/')}>Home</Link>\n          </div>\n        </Breadcrumb>\n      </BreadcrumbsWrapper>\n      <div className=\"References-table\">\n        <Heading>Data Sources</Heading>\n        <Table\n          schema={schema}\n          data={data}\n          style={{\n            maxHeight: 'calc(100vh - 252px)'\n          }}\n          virtualization={false}\n          loadMore={() => null}\n          rowHeight={50}\n          headerHeight={40}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default References;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { client } from './api';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Stats from './Stats';\nimport Detail from './Detail';\nimport References from './References';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <div>\n        <Header />\n        <Router basename=\"/covid\">\n          <Switch>\n            <Route exact path=\"/\">\n              <App />\n            </Route>\n            <Route path=\"/india/detail/:id\" exact>\n              <Detail entity=\"india\" />\n            </Route>\n            <Route path=\"/world/detail/:id\" exact>\n              <Detail entity=\"world\" />\n            </Route>\n            <Route path=\"/india\">\n              <Stats entity=\"india\" />\n            </Route>\n            <Route path=\"/world\">\n              <Stats entity=\"world\" />\n            </Route>\n            <Route path=\"/references\">\n              <References />\n            </Route>\n          </Switch>\n          <Footer />\n        </Router>\n      </div>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}